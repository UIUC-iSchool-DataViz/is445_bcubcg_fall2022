[meta title:"IS445 Spring 2022" description:"Super cool viz for Data Viz" /]

[Header
  fullWidth:true
  title:"IS445 - Spring 2022"
  subtitle:"Idyll Post Example for Data Viz"
  author:"Jill Naiman"
  authorLink:"https:astronaiman.com"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]

## Introduction

### Markdown Syntax Reminders

Unordered lists:
* thing 1
* thing 2

Ordered lists:
1. thing the first
1. thing the second

```
print('hi')
```

![A very large corgi.](https://i.redd.it/5f0snjdbzr121.jpg)

## Images

Attaching images (beyond the markdown style above) will look very much like HTML tags:
[img src:"https://i.redd.it/5f0snjdbzr121.jpg" style:`{height:'300px'}`/]

[p] This is a paragraph tag [/p]


## Layouts

We will try to put images side by side using [the Float layout](https://idyll-lang.org/docs/component/float).

[Float position:"left"]
  [img src:"https://uiuc-ischool-dataviz.github.io/spring2019online/week04/data/littleCorgiInHat.png" style:`{height:300}`/]
  // this is a comment note that we had to make sure to close the [img /] tag
[/Float]

[Float position:"right"]
  [img src:"https://uiuc-ischool-dataviz.github.io/spring2019online/week10/corg/IMG_2809.jpg" style:`{height:300}`/]
[/Float]

For reference from [Idyll page on scrollers](https://idyll-lang.org/docs/component/scroller):

```
[Scroller currentStep:scrollerIndex]
  [Graphic style:`{padding: 50}`]
      [Chart type:`"line"` data:`scrollerChartData.slice(0, scrollerIndex + 2)` /]
  [/Graphic]

  [Step]## Hey, neat, here's some data![/Step]
  [Step]## ...   [/Step]
  [Step]## ...  What's that more data?![/Step]
  [Step]## Hmm...[/Step]
  [Step]## Too much data.[/Step]
  [Step]## Stop.[/Step]
  [Step]## that.[/Step]
  [Step]## data[/Step]

[/Scroller]
```

[Scroller currentStep:scrollerIndex]
  [Graphic style:`{padding:50}`]
    [img src:"https://uiuc-ischool-dataviz.github.io/spring2019online/week10/corg/IMG_2814.jpg" style:`{height:700}` /]
  [/Graphic]

  [Step] ## Welsh Corgis are a small type of hearding dog, originally from Wales, UK [/Step]
  [Step] ## Corgi-Dashshund mixes are called dorgis. [/Step]
  [Step] ## Queen Elizabeth II has owned more than 30 corgis in her lifetime [/Step]


[/Scroller]

## Data

[data name:"corgisTime" source:"corgs_per_country_over_time_columns_2020.csv" /]

### Table with our data

[Table data:corgisTime /]

### Chart with Idyll's built in chart

We'll first try with [the built in chart](https://idyll-lang.org/docs/component/chart) of Idyll, for reference:

```
[var name:"dataToBeCharted" value:`[
  {x: 0, y: 0.5},
  {x: 3.5, y: 0.5},
  {x: 4, y: 0},
  {x: 4.5, y: 1},
  {x: 5, y: 0.5},
  {x: 8, y: 0.5}
]` /]

[Chart type:"line" data:dataToBeCharted domain:`[0, 8]` range:`[0, 1]` /]
```

[Chart type:"time" data:`corgisTime` domain:`null` range:`null` x:"Years" y:"United States" /]

Note: this data is giving us accumulations of corgis over time, we probably don't want to connect these unconnected events with a line.

[Chart type:"bar" data:`corgisTime` domain:`null` range:`null` x:"Years" y:"United States" /]

## Vega-lite (if working for you!) in Idyll

[IdyllVegaLite data:corgisTime spec:`{
  mark:"line",
  width:600,
  transform:[
  {"calculate":"datetime(datum.Years,1)","as":"Years"}
  ],
  encoding:{
    x:{field:"Years", type:"temporal", axis:{title:"Year",format:"%Y"}},
	y:{field:"United States", type:"quantitative"}
  } // close encoding

}` /]

Note: you can port to the vega-editor to check out any bugs.

## D3.js (since vega-lite is touchy!)

Start with a variable:

[var name:"state" value:0 /]
[CustomD3Component className:"d3-component" state:state /]
[button onClick:`state++`]
  Click me!
[/button]

We want to use [this example](https://bl.ocks.org/vikkya/75bda04cd0c00e49cbda6cfee8d97aba) to using our data.  What our strategy will be:

1. copy the custom-d3-component.js file we were just commenting
1. change the names for the "extend" calls to HistogramCustomD3Component
1. comment out the drawing of the circle update function
1. replace the drawing of the viewer box (gray box) and initial circle with the example from the basic histogram (using that data)
1. starting to transition to our data

[HistogramCustomD3Component className:"d3-component" /]

Using the [select built in](https://idyll-lang.org/docs/component/select):

```
[var name:"selectVal" value:"test1" /]
[Select value:selectVal options:`["test1", "test2"]`  /]
```

[var name:"myCountry" value:"United States" /]

[HistogramButtonCustomD3Component className:"d3-component" country:myCountry /]
Select a country:
[Select value:myCountry options:`["United States", "United Kingdom", "South Africa"]` /]
